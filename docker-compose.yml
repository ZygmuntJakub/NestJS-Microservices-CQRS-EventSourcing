version: '3'
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx:/etc/nginx/templates
    ports:
      - ${NGINX_PORT_IN}:${NGINX_PORT_OUT}
    networks:
      - services-network
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
  redis:
    image: 'bitnami/redis:latest'
    hostname: ${REDIS_HOSTNAME}
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_MASTER_PORT_NUMBER=${REDIS_PORT}
    networks:
      - services-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MG_PORT}:${RABBITMQ_MG_PORT}
    env_file:
      - .env
    networks:
      - services-network
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - ${GATEWAY_SERVICE_PORT}-${GATEWAY_SERVICE_PORT_END}:${GATEWAY_SERVICE_PORT}
    networks:
      - services-network
      - gateway-network
#    volumes:
#      - ./gateway:/gateway/
    depends_on:
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
  #MICROSERVICES
  user-service:
    build: ./user-service
    restart: always
    hostname: user-service
    env_file:
      - .env
    networks:
      - services-network
#    volumes:
#      - ./user-service:/user-service/
#      - /user-service/node_modules
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - rabbitmq
  auth-service:
    build: ./auth-service
    restart: always
    hostname: auth-service
    env_file:
      - .env
    networks:
      - services-network
      - gateway-network
#    volumes:
#      - ./auth-service:/auth-service/
#      - /auth-service/node_modules
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - rabbitmq
  poll-service:
    build: ./poll-service
    restart: always
    hostname: poll-service
    env_file:
      - .env
    networks:
      - services-network
      - gateway-network
#    volumes:
#      - ./poll-service:/poll-service/
#      - /poll-service/node_modules
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - rabbitmq
  answer-service:
    build: ./answer-service
    restart: always
    hostname: answer-service
    env_file:
      - .env
    networks:
      - services-network
      - gateway-network
#    volumes:
#      - ./answer-service:/answer-service/
#      - /answer-service/node_modules
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - rabbitmq
  result-service:
    build: ./result-service
    restart: always
    hostname: result-service
    env_file:
      - .env
    networks:
      - services-network
      - gateway-network
#    volumes:
#      - ./result-service:/result-service/
#      - /result-service/node_modules
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - rabbitmq

#DATABASES
  user-service-db:
    image: postgres
    hostname: ${POSTGRES_USER_SERVICE_DB_HOSTNAME}
    environment:
      - POSTGRES_DB=${POSTGRES_USER_SERVICE_DB}
      - POSTGRES_USER=${POSTGRES_USER_SERVICE_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_USER_SERVICE_PASSWORD}
    ports:
      - 22222:${POSTGRES_USER_SERVICE_DB_PORT}
    networks:
      - services-network
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
  poll-service-db:
    image: postgres
    hostname: ${POSTGRES_POLL_SERVICE_DB_HOSTNAME}
    environment:
      - POSTGRES_DB=${POSTGRES_POLL_SERVICE_DB}
      - POSTGRES_USER=${POSTGRES_POLL_SERVICE_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_POLL_SERVICE_PASSWORD}
    ports:
      - 22223:${POSTGRES_POLL_SERVICE_DB_PORT}
    networks:
      - services-network
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
  answer-service-db:
    image: postgres
    hostname: ${POSTGRES_ANSWER_SERVICE_DB_HOSTNAME}
    environment:
      - POSTGRES_DB=${POSTGRES_ANSWER_SERVICE_DB}
      - POSTGRES_USER=${POSTGRES_ANSWER_SERVICE_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_ANSWER_SERVICE_PASSWORD}
    ports:
      - 22224:${POSTGRES_ANSWER_SERVICE_DB_PORT}
    networks:
      - services-network
      - gateway-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
networks:
  services-network:
    internal: true
  gateway-network:
    driver: bridge